# Generated by Django 3.1.2 on 2020-12-07 18:58

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email_address', models.CharField(max_length=50)),
                ('phone_number', models.CharField(blank=True, max_length=10)),
                ('street_address', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('state', models.CharField(blank=True, max_length=2)),
                ('zip_code', models.CharField(blank=True, max_length=10)),
                ('birth_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('photo', models.ImageField(blank=True, upload_to='photos')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education_level_description', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employer_name', models.CharField(max_length=30)),
                ('employer_email', models.CharField(max_length=30)),
                ('employer_logo', models.ImageField(blank=True, upload_to='photos')),
            ],
        ),
        migrations.CreateModel(
            name='Employer_Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_description', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='External_Application_Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ease_of_application', models.IntegerField()),
                ('clarity_of_application', models.IntegerField()),
                ('more_than_resume', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Job_Listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listing_description', models.CharField(max_length=30)),
                ('job_title', models.CharField(max_length=30)),
                ('job_description', models.CharField(max_length=255)),
                ('job_street_address', models.CharField(max_length=50)),
                ('job_city', models.CharField(max_length=50)),
                ('job_link_to_application', models.CharField(max_length=255)),
                ('job_state', models.CharField(max_length=2)),
                ('job_zip_code', models.CharField(max_length=10)),
                ('job_wage_range', models.CharField(choices=[('state minimum hourly wage', 'State Minimum Hourly Wage'), ('10-19k yearly', '10-19K Yearly'), ('20k-39k yearly', '20k-39K Yearly'), ('40k-64k yearly', '40k-64K Yearly'), ('65k-70k yearly', '65k-70K Yearly'), ('70-99k yearly', '70-99K Yearly'), ('100k+', '100K+'), ('undisclosed', 'Undisclosed')], default='state minimum hourly wage', max_length=50)),
                ('relocation_assistance', models.BooleanField()),
                ('transcript_required', models.BooleanField()),
                ('cover_letter_required', models.BooleanField()),
                ('gpa', models.BooleanField()),
                ('letter_of_reccomendation', models.BooleanField()),
                ('deadline_date', models.DateTimeField(default=datetime.datetime.now)),
                ('still_open', models.BooleanField()),
                ('employer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employer', to='listings.employer')),
            ],
        ),
        migrations.CreateModel(
            name='Job_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_type_description', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Minority_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minority_type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_description', models.CharField(choices=[('a/btesting', 'A/BTESTING'), ('adobeillustrator', 'ADOBEILLUSTRATOR'), ('adobephotoshop', 'ADOBEPHOTOSHOP'), ('ai', 'AI'), ('ajax', 'AJAX'), ('analytical', 'ANALYTICAL'), ('analytics', 'ANALYTICS'), ('android', 'ANDROID'), ('angular', 'ANGULAR'), ('angularjs', 'ANGULARJS'), ('apache', 'APACHE'), ('apex', 'APEX'), ('apirest', 'APIREST'), ('apis', 'APIS'), ('arduino', 'ARDUINO'), ('asp.net', 'ASP.NET'), ('asp.netcore', 'ASP.NETCORE'), ('asp.netmvc', 'ASP.NETMVC'), ('assembleur', 'ASSEMBLEUR'), ('assembly', 'ASSEMBLY'), ('autocad', 'AUTOCAD'), ('autonome', 'AUTONOME'), ('awk', 'AWK'), ('aws', 'AWS'), ('backend', 'BACKEND'), ('bash', 'BASH'), ('bigdata', 'BIGDATA'), ('bootstrap', 'BOOTSTRAP'), ('c++', 'C++'), ('cassandra', 'CASSANDRA'), ('centreon', 'CENTREON'), ('certifications', 'CERTIFICATIONS'), ('cgi', 'CGI'), ('cics', 'CICS'), ('cisco', 'CISCO'), ('cloudcomputing', 'CLOUDCOMPUTING'), ('coaching', 'COACHING'), ('cobol', 'COBOL'), ('codeigniter', 'CODEIGNITER'), ('cognos', 'COGNOS'), ('collaboration', 'COLLABORATION'), ('communication', 'COMMUNICATION'), ('consulting', 'CONSULTING'), ('contentmarketing', 'CONTENTMARKETING'), ('continuousintegration', 'CONTINUOUSINTEGRATION'), ('controlsystems', 'CONTROLSYSTEMS'), ('cordova', 'CORDOVA'), ('creatingdata', 'CREATINGDATA'), ('css', 'CSS'), ('cucumber', 'CUCUMBER'), ('customerservice', 'CUSTOMERSERVICE'), ('cvs', 'CVS'), ('dataanalytics', 'DATAANALYTICS'), ('dataengineers', 'DATAENGINEERS'), ('datamanagement', 'DATAMANAGEMENT'), ('datamining', 'DATAMINING'), ('dataquality', 'DATAQUALITY'), ('datavisualisation', 'DATAVISUALISATION'), ('datavisualization', 'DATAVISUALIZATION'), ('datawarehouse', 'DATAWAREHOUSE'), ('databasedevelopers', 'DATABASEDEVELOPERS'), ('databases', 'DATABASES'), ('dax', 'DAX'), ('db', 'DB'), ('deeplearning', 'DEEPLEARNING'), ('design', 'DESIGN'), ('designpatterns', 'DESIGNPATTERNS'), ('designer', 'DESIGNER'), ('desk', 'DESK'), ('devops', 'DEVOPS'), ('diagnostics', 'DIAGNOSTICS'), ('digitalmarketing', 'DIGITALMARKETING'), ('django', 'DJANGO'), ('documentation', 'DOCUMENTATION'), ('dom', 'DOM'), ('drupal', 'DRUPAL'), ('dynamodb', 'DYNAMODB'), ('e-commerce', 'E-COMMERCE'), ('eclipse', 'ECLIPSE'), ('electronics', 'ELECTRONICS'), ('engineering', 'ENGINEERING'), ('ensemble', 'ENSEMBLE'), ('entityframework', 'ENTITYFRAMEWORK'), ('etl', 'ETL'), ('extjs', 'EXTJS'), ('fortran', 'FORTRAN'), ('foundation', 'FOUNDATION'), ('frontend', 'FRONTEND'), ('full-stack', 'FULL-STACK'), ('g\\xc\\xanielogiciel', 'G\\XC\\XANIELOGICIEL'), ('git', 'GIT'), ('go', 'GO'), ('googlemaps', 'GOOGLEMAPS'), ('grav', 'GRAV'), ('groovy', 'GROOVY'), ('grunt', 'GRUNT'), ('gsm', 'GSM'), ('gulp', 'GULP'), ('gwt', 'GWT'), ('hadoop', 'HADOOP'), ('hardware', 'HARDWARE'), ('hbase', 'HBASE'), ('hibernate', 'HIBERNATE'), ('hive', 'HIVE'), ('html', 'HTML'), ('http', 'HTTP'), ('ia', 'IA'), ('implementation', 'IMPLEMENTATION'), ('informationsecurity', 'INFORMATIONSECURITY'), ('innovation', 'INNOVATION'), ('insights', 'INSIGHTS'), ('internet', 'INTERNET'), ('interpersonal', 'INTERPERSONAL'), ('ios', 'IOS'), ('iot', 'IOT'), ('iphone', 'IPHONE'), ('itil', 'ITIL'), ('javascript', 'JAVASCRIPT'), ('jcl', 'JCL'), ('jenkins', 'JENKINS'), ('joomla', 'JOOMLA'), ('jquery', 'JQUERY'), ('jsf', 'JSF'), ('json', 'JSON'), ('jsp', 'JSP'), ('junit', 'JUNIT'), ('laravel', 'LARAVEL'), ('leadership', 'LEADERSHIP'), ('less', 'LESS'), ('linux', 'LINUX'), ('listening', 'LISTENING'), ('lua', 'LUA'), ('mac', 'MAC'), ('machinelearning', 'MACHINELEARNING'), ('mariadb', 'MARIADB'), ('math\\xc\\xamatiques', 'MATH\\XC\\XAMATIQUES'), ('mathematics', 'MATHEMATICS'), ('matlab', 'MATLAB'), ('maven', 'MAVEN'), ('mentoring', 'MENTORING'), ('microsoft', 'MICROSOFT'), ('microsoftaccess', 'MICROSOFTACCESS'), ('microsoftazure', 'MICROSOFTAZURE'), ('microsoftexcel', 'MICROSOFTEXCEL'), ('microsoftoffice', 'MICROSOFTOFFICE'), ('microsoftpowerbi', 'MICROSOFTPOWERBI'), ('microsoftproject', 'MICROSOFTPROJECT'), ('microsoftvisual', 'MICROSOFTVISUAL'), ('microsoftwindows', 'MICROSOFTWINDOWS'), ('microstrategy', 'MICROSTRATEGY'), ('mobile', 'MOBILE'), ('mockito', 'MOCKITO'), ('modeling', 'MODELING'), ('mongodb', 'MONGODB'), ('msaccess', 'MSACCESS'), ('msexcel', 'MSEXCEL'), ('mssqlserver', 'MSSQLSERVER'), ('msvisio', 'MSVISIO'), ('msword', 'MSWORD'), ('multitasking', 'MULTITASKING'), ('mvvm', 'MVVM'), ('mysql', 'MYSQL'), ('nagios', 'NAGIOS'), ('networks', 'NETWORKS'), ('neuralnetworks', 'NEURALNETWORKS'), ('nhibernate', 'NHIBERNATE'), ('nlp', 'NLP'), ('node.js', 'NODE.JS'), ('nodejs', 'NODEJS'), ('nosql', 'NOSQL'), ('obiee', 'OBIEE'), ('objectivec', 'OBJECTIVEC'), ('operatingsystem', 'OPERATINGSYSTEM'), ('optimisations', 'OPTIMISATIONS'), ('oracle', 'ORACLE'), ('organizational', 'ORGANIZATIONAL'), ('pca', 'PCA'), ('pentaho', 'PENTAHO'), ('perl', 'PERL'), ('phonegap', 'PHONEGAP'), ('php', 'PHP'), ('pl/sql', 'PL/SQL'), ('postgresql', 'POSTGRESQL'), ('powerpoint', 'POWERPOINT'), ('powershell', 'POWERSHELL'), ('presentation', 'PRESENTATION'), ('prestashop', 'PRESTASHOP'), ('priorities', 'PRIORITIES'), ('problemsolving', 'PROBLEMSOLVING'), ('processing', 'PROCESSING'), ('programming', 'PROGRAMMING'), ('projectmanagement', 'PROJECTMANAGEMENT'), ('projectmanager', 'PROJECTMANAGER'), ('prototyping', 'PROTOTYPING'), ('pspice', 'PSPICE'), ('python', 'PYTHON'), ('qc', 'QC'), ('qlikview', 'QLIKVIEW'), ('r\\xc\\xaseau', 'R\\XC\\XASEAU'), ('redis', 'REDIS'), ('reporting', 'REPORTING'), ('reportingtools', 'REPORTINGTOOLS'), ('ruby', 'RUBY'), ('s\\xc\\xacurit\\xc\\xainformatique', 'S\\XC\\XACURIT\\XC\\XAINFORMATIQUE'), ('sap', 'SAP'), ('sas', 'SAS'), ('sass', 'SASS'), ('scala', 'SCALA'), ('scrum', 'SCRUM'), ('sdkandroid', 'SDKANDROID'), ('selenium', 'SELENIUM'), ('senchatouch', 'SENCHATOUCH'), ('sharepoint', 'SHAREPOINT'), ('shellunix', 'SHELLUNIX'), ('shiny', 'SHINY'), ('sip', 'SIP'), ('sixsigma', 'SIXSIGMA'), ('sketchup', 'SKETCHUP'), ('soa', 'SOA'), ('soap', 'SOAP'), ('softwareknowledge', 'SOFTWAREKNOWLEDGE'), ('spark', 'SPARK'), ('spring', 'SPRING'), ('springmvc', 'SPRINGMVC'), ('sql', 'SQL'), ('sqlserver', 'SQLSERVER'), ('sqlite', 'SQLITE'), ('strategicthinking', 'STRATEGICTHINKING'), ('svn', 'SVN'), ('swift', 'SWIFT'), ('swing', 'SWING'), ('symfony', 'SYMFONY'), ('t-sql', 'T-SQL'), ('tableau', 'TABLEAU'), ('technical', 'TECHNICAL'), ('telecom', 'TELECOM'), ('teradata', 'TERADATA'), ('training', 'TRAINING'), ('typescript', 'TYPESCRIPT'), ('ui/ux', 'UI/UX'), ('uml', 'UML'), ('unix', 'UNIX'), ('vb.net', 'VB.NET'), ('vba', 'VBA'), ('verbalcommunication', 'VERBALCOMMUNICATION'), ('visio', 'VISIO'), ('visualbasic', 'VISUALBASIC'), ('vmware', 'VMWARE'), ('wcf', 'WCF'), ('webanalytics', 'WEBANALYTICS'), ('webservices', 'WEBSERVICES'), ('webgl', 'WEBGL'), ('wi-fi', 'WI-FI'), ('wimax', 'WIMAX'), ('windows', 'WINDOWS'), ('windows', 'WINDOWS'), ('word', 'WORD'), ('wordpress', 'WORDPRESS'), ('wpf', 'WPF'), ('wsdl', 'WSDL'), ('xaml', 'XAML'), ('xhtml', 'XHTML'), ('xml', 'XML')], default='a/btesting', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Job_Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_lvl', models.IntegerField()),
                ('job_listing_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.job_listing')),
                ('skill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.skill')),
            ],
        ),
        migrations.AddField(
            model_name='job_listing',
            name='job_type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to='listings.job_type'),
        ),
        migrations.AddField(
            model_name='employer',
            name='size_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.employer_size'),
        ),
        migrations.AddField(
            model_name='employer',
            name='user_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_date', models.DateTimeField(default=datetime.datetime.now)),
                ('Applicant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.applicant')),
                ('job_listing_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.job_listing')),
                ('rating', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='listings.external_application_rating')),
            ],
        ),
        migrations.CreateModel(
            name='Applicant_Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_lvl', models.IntegerField()),
                ('Applicant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.applicant')),
                ('skill_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.skill')),
            ],
        ),
        migrations.AddField(
            model_name='applicant',
            name='education_lvl',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='listings.education'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='minority_status',
            field=models.ManyToManyField(blank=True, to='listings.Minority_Type'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='user_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
